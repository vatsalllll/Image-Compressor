# -*- coding: utf-8 -*-
"""ImageCompressor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_Ut_WL0MiD88J7KlQpn0TyA4FIcyd_fg
"""

from matplotlib.image import imread
import matplotlib.pyplot as plt
import numpy as np

original_image = imread('wallpaper.jpg')


def display_image(inputImage, approxImage, rank):
    plt.subplot(1, 2, 1)
    plt.imshow(original_image)
    plt.title('Original')

    plt.subplot(1, 2, 2)
    plt.imshow(approxImage)
    plt.title("Compressed at r=" + str(rank))

    plt.show()


def perform_compression(inputImage, rank):
    U, S, Vt = np.linalg.svd(inputImage, full_matrices=False)
    approxImage = U[:, :rank] @ np.diag(S[:rank]) @ Vt[:rank, :]
    return approxImage


def color_compression(inputImage, rank):
    redM, greenM, blueM = inputImage[:, :, 0], inputImage[:, :, 1], inputImage[:, :, 2]
    compressedRed = perform_compression(redM, rank)
    compressedGreen = perform_compression(greenM, rank)
    compressedBlue = perform_compression(blueM, rank)
    compressedRed = compressedRed / compressedRed.max()
    compressedGreen = compressedGreen / compressedGreen.max()
    compressedBlue = compressedBlue / compressedBlue.max()
    compressedImageOutput = np.stack([compressedRed, compressedGreen, compressedBlue], axis=2)
    return compressedImageOutput


display_image(original_image, color_compression(original_image, 5), 5)